// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Book {
  id           Int      @id @default(autoincrement())
  title        String   @db.VarChar(255)
  author       String   @db.VarChar(255)
  description  String   @db.Text
  rating       Rating   @default(NORMAL)
  categoryName String
  categoryId   Int
  category     Category @relation(fields: [categoryId, categoryName], references: [id, name])
  lang         Lang     @default(ENGLISH)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  assignedToUserId String?  @db.VarChar(255)
  assignedToUser   User?    @relation(fields: [assignedToUserId], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
model User {
  id             String    @id @default(cuid())
  username       String?    @unique
  name           String?
  password       String?
  email          String?   @unique
  emailVerified   DateTime?
  image          String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  accounts       Account[]
  sessions       Session[]
  recommendedBooks Book[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)
  createdAt    DateTime @default(now())
  Book Book[]

  @@unique([id, name])
}

enum Rating {
  BAD
  NORMAL
  GOOD
  EXCELLENT
}

enum Lang {
  ENGLISH
  BURMESE
  KOREAN
  CHINESE
  JPN
}
